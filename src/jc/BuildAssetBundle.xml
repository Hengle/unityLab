<?xml version="1.0" encoding="utf-8"?>
<!-- 资源打包配置表 -->
<!-- path不支持相对目录的跳转（“..”、“.”） -->
<!-- ignoreExtention:文件或目录，以这里指定的字符串结尾时，那么该文件或目录将被忽略 -->
<!-- platform:目标平台。UnityEditor.BuildTarget枚举 -->
<buildAssetBundle ignoreExtention="svn;meta" platform="StandaloneWindows">
	<!-- saveRoot:输出目录，保存生成文件的根目录（非绝对路径，Assets的相对路径） -->
	<saveRoot><![CDATA[u3dRes]]></saveRoot>
	<!-- 一个资源打包配置 -->
	<!-- id:该资源包的id -->
	<!-- dependence:依赖的资源包的id -->
	<asset id="0" dependence="">
		<!-- bind:可以将一个或多个item放在bind节点内，表示这个bind节点中的所有item将打包成一个资源文件 -->
		<!-- 不放在bind节点内的item，其中每一个物理文件都将以原有的目录结构在输出目录生成对应的一个打包文件 -->
		<!-- savePath:保存路径（非绝对路径，Assets的相对路径） -->
		<bind savePath="test/JC.unity3d">
			<item type="directory" recursion="true"><![CDATA[JC]]></item>
		</bind>
		<!-- 一个资源配置 -->
		<!-- type:资源的类型。directory（目录），file（文件） -->
		<!-- recursion:是否需要递归目录 -->
		<!-- item节点中的文本:表示目录的路径或文件的路径（非绝对路径，Assets的相对路径） -->
		<item type="directory" recursion="false"><![CDATA[JC]]></item>
	</asset>
	<asset id="1" dependence="0">
		<!-- bind:可以将一个或多个item放在bind节点内，表示这个bind节点中的所有item将打包成一个资源文件 -->
		<!-- 不放在bind节点内的item，其中每一个物理文件都将以原有的目录结构在输出目录生成对应的一个打包文件 -->
		<!-- savePath:保存路径（非绝对路径，Assets的相对路径） -->
		<bind savePath="test/JC2.unity3d">
			<item type="directory" recursion="true"><![CDATA[JC]]></item>
		</bind>
	</asset>
</buildAssetBundle>